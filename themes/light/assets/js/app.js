(self.webpackChunkslim=self.webpackChunkslim||[]).push([[143],{7971:(e,o,n)=>{"use strict";var s=n(538),t=n(4044),a=n(1083),i=n(8948),l=n(629),d=n(4054);s.Z.config.devtools=!0,s.Z.config.performance=!0,(0,t.zb)(),(0,t.VZ)();new s.Z({name:"app",router:a.Z,store:i.Z,data:()=>({globalLoading:!1,pageComponent:!1}),computed:{...(0,l.rn)({showsLoading:e=>e.shows.loading})},mounted(){const{getShows:e,setLoadingDisplay:o,setLoadingFinished:n}=this;if(d.yG&&console.log("App Mounted!"),!window.location.pathname.includes("/login")){const{$store:e}=this;Promise.all([e.dispatch("login",{username:window.username}),e.dispatch("getConfig"),e.dispatch("getStats")]).then((([e,o])=>{d.yG&&console.log("App Loaded!");const n=new CustomEvent("medusa-config-loaded",{detail:{general:o.general,layout:o.layout}});window.dispatchEvent(n)})).catch((e=>{console.debug(e),alert("Unable to connect to Medusa!")}))}e().then((()=>{console.log("Finished loading all shows."),setTimeout((()=>{n(!0),o(!1)}),2e3)}))},methods:{...(0,l.nv)({getShows:"getShows"}),...(0,l.OI)(["setLoadingDisplay","setLoadingFinished"])}}).$mount("#vue-wrap")}},0,[[7971,216,886,125]]]);
//# sourceMappingURL=app.js.map